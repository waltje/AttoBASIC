
Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD uart.o
Address of section .text set to 0x1c88
Address of section .data set to 0x80021a
Address of section .data set to 0x80021a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000001c88       0x46
 *(.vectors)
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000001c88                . = ALIGN (0x2)
                0x0000000000001c88                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000001c88        0x0 linker stubs
 *(.trampolines*)
                0x0000000000001c88                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000001c88                __ctors_start = .
 *(.ctors)
                0x0000000000001c88                __ctors_end = .
                0x0000000000001c88                __dtors_start = .
 *(.dtors)
                0x0000000000001c88                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 *(.init9)
 *(.text)
 .text          0x0000000000001c88        0x0 uart.o
                0x0000000000001c88                . = ALIGN (0x2)
 *(.text.*)
 .text.uart_putchar
                0x0000000000001c88        0x6 uart.o
                0x0000000000001c88                uart_putchar
 .text.uart_getchar
                0x0000000000001c8e       0x40 uart.o
                0x0000000000001c8e                uart_getchar
                0x0000000000001cce                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x0000000000001cce                _etext = .

.data           0x000000000080021a        0x0 load address 0x0000000000001cce
                0x000000000080021a                PROVIDE (__data_start, .)
 *(.data)
 .data          0x000000000080021a        0x0 uart.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080021a                . = ALIGN (0x2)
                0x000000000080021a                _edata = .
                0x000000000080021a                PROVIDE (__data_end, .)

.bss            0x000000000080021a       0x52
                0x000000000080021a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080021a       0x52 uart.o
 *(.bss*)
 *(COMMON)
                0x000000000080026c                PROVIDE (__bss_end, .)
                0x0000000000001cce                __data_load_start = LOADADDR (.data)
                0x0000000000001cce                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080026c        0x0
                0x000000000080026c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080026c                PROVIDE (__noinit_end, .)
                0x000000000080026c                _end = .
                0x000000000080026c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 uart.o

.debug_pubnames
                0x0000000000000000       0x34
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x34 uart.o

.debug_info     0x0000000000000000      0x1ed
 *(.debug_info)
 .debug_info    0x0000000000000000      0x1ed uart.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x127
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x127 uart.o

.debug_line     0x0000000000000000       0xef
 *(.debug_line)
 .debug_line    0x0000000000000000       0xef uart.o

.debug_frame    0x0000000000000000       0x30
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x30 uart.o

.debug_str      0x0000000000000000       0xd5
 *(.debug_str)
 .debug_str     0x0000000000000000       0xd5 uart.o
                                        0x10e (size before relaxing)

.debug_loc      0x0000000000000000       0x50
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x50 uart.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(uart.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x0000000000000000       0x29
 .debug_pubtypes
                0x0000000000000000       0x29 uart.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 uart.o

Cross Reference Table

Symbol                                            File
__do_clear_bss                                    uart.o
uart_getchar                                      uart.o
uart_putchar                                      uart.o
